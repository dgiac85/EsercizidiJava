package com.pellegrinoprincipe;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;

public class UpdatableResultSetForm extends javax.swing.JFrame
{
    private ImageIcon prev_icon;
    private ImageIcon prev_dis_icon;
    private ImageIcon next_icon;
    private ImageIcon next_dis_icon;
    private ImageIcon last_icon;
    private ImageIcon last_dis_icon;
    private ImageIcon first_icon;
    private ImageIcon first_dis_icon;
    private ResultSet rs;
    private int nr_row;
    // variabili di stato operaz.
    private boolean inInsertMode;
    private boolean navigatorEnabled = true;

    public UpdatableResultSetForm()
    {
        initComponents();

        // carica le icone del navigatore
        loadIcons();

        // effettuo la connessione al databse;
        connectionToDatabase();

        // carico il primo record
        loadFirstRecord();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_desc = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lbl_first = new javax.swing.JLabel();
        lbl_prev = new javax.swing.JLabel();
        lbl_next = new javax.swing.JLabel();
        lbl_last = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_go_record = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lbl_tot_record = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_result = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        btn_modify = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        radio_modify = new javax.swing.JRadioButton();
        radio_delete = new javax.swing.JRadioButton();
        radio_insert = new javax.swing.JRadioButton();
        btn_insert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UpdatableResultSetForm");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabella genere:"));

        jLabel1.setText("id_genere:");

        txt_id.setEnabled(false);

        jLabel2.setText("descrizione:");

        txt_desc.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_desc, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                    .addComponent(txt_id, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Navigatore:"));

        lbl_first.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_firstMouseClicked(evt);
            }
        });

        lbl_prev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_prevMouseClicked(evt);
            }
        });

        lbl_next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_nextMouseClicked(evt);
            }
        });

        lbl_last.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_lastMouseClicked(evt);
            }
        });

        jLabel3.setText("Vai al record nr.:");

        txt_go_record.setText("0");
        txt_go_record.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_go_recordFocusLost(evt);
            }
        });

        jLabel4.setText("Tot. record:");

        lbl_tot_record.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_first)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_prev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_next)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_last)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 272, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_tot_record))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_go_record, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_first)
                            .addComponent(lbl_prev)
                            .addComponent(lbl_next)
                            .addComponent(lbl_last)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txt_go_record, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbl_tot_record)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Output:"));

        ta_result.setColumns(20);
        ta_result.setRows(5);
        jScrollPane1.setViewportView(ta_result);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Operazioni resultset:"));

        btn_modify.setText("Conferma modifica...");
        btn_modify.setEnabled(false);
        btn_modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifyActionPerformed(evt);
            }
        });

        btn_delete.setText("Conferma cancellazione...");
        btn_delete.setEnabled(false);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_modify);
        radio_modify.setText("Attiva modifica corrente record");
        radio_modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_modifyActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_delete);
        radio_delete.setText("Attiva cancellazione corrente record");
        radio_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_deleteActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_insert);
        radio_insert.setText("Attiva inserimento nuovo record");
        radio_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_insertActionPerformed(evt);
            }
        });

        btn_insert.setText("Conferma inserimento...");
        btn_insert.setEnabled(false);
        btn_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radio_modify)
                    .addComponent(radio_delete)
                    .addComponent(radio_insert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_insert)
                    .addComponent(btn_delete)
                    .addComponent(btn_modify))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_delete, btn_insert, btn_modify});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_modify)
                    .addComponent(btn_modify))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(radio_delete)
                    .addComponent(btn_delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_insert))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void lbl_lastMouseClicked(java.awt.event.MouseEvent evt)                                      
    {                                          
        try
        {
            if (navigatorEnabled)
            {                
                rs.last(); // sposto il cursore all'ultimo record

                txt_id.setText(rs.getString(1));
                txt_desc.setText(rs.getString(2));

                // navigatore
                lbl_next.setIcon(next_dis_icon);
                lbl_last.setIcon(last_dis_icon);
                lbl_prev.setIcon(prev_icon);
                lbl_first.setIcon(first_icon);

                lbl_tot_record.setText(rs.getRow() + " di " + nr_row);
            }
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }
    }                                     

    private void lbl_firstMouseClicked(java.awt.event.MouseEvent evt)                                       
    {                                           
        try
        {
            if (navigatorEnabled)
            {                
                rs.first(); // sposto il cursore al primo record

                txt_id.setText(rs.getString(1));
                txt_desc.setText(rs.getString(2));

                // navigatore
                lbl_next.setIcon(next_icon);
                lbl_last.setIcon(last_icon);
                lbl_prev.setIcon(prev_dis_icon);
                lbl_first.setIcon(first_dis_icon);

                lbl_tot_record.setText(rs.getRow() + " di " + nr_row);
            }
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }
    }                                      

    private void lbl_nextMouseClicked(java.awt.event.MouseEvent evt)                                      
    {                                          
        try
        {
            if (navigatorEnabled)
            {                
                boolean row = rs.relative(1); // sposto il cursore al successivo record

                if (row) // se lo spostamento ha trovato un record...
                {
                    txt_id.setText(rs.getString(1));
                    txt_desc.setText(rs.getString(2));

                    if (rs.isLast()) // navigatore
                    {
                        lbl_next.setIcon(next_dis_icon);
                        lbl_last.setIcon(last_dis_icon);
                    }
                    else
                    {
                        lbl_next.setIcon(next_icon);
                        lbl_last.setIcon(last_icon);
                    }

                    lbl_prev.setIcon(prev_icon);
                    lbl_first.setIcon(first_icon);
                }
                else
                    rs.last();
  
                lbl_tot_record.setText(rs.getRow() + " di " + nr_row);
            }

        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }
    }                                     

    private void lbl_prevMouseClicked(java.awt.event.MouseEvent evt)                                      
    {                                          
        try
        {
            if (navigatorEnabled)
            {
                // sposto il cursore al precedente record
                boolean row = rs.relative(-1);

                // se lo spostamento ha trovato un record...
                if (row)
                {
                    txt_id.setText(rs.getString(1));
                    txt_desc.setText(rs.getString(2));

                    // navigatore
                    if (rs.isFirst())
                    {
                        lbl_prev.setIcon(prev_dis_icon);
                        lbl_first.setIcon(first_dis_icon);
                    }
                    else
                    {
                        lbl_prev.setIcon(prev_icon);
                        lbl_first.setIcon(first_icon);
                    }

                    lbl_next.setIcon(next_icon);
                    lbl_last.setIcon(last_icon);
                }
                else
                    rs.first();
       
                lbl_tot_record.setText(rs.getRow() + " di " + nr_row);
            }
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }
    }                                     

    private void txt_go_recordFocusLost(java.awt.event.FocusEvent evt)                                        
    {                                            
        int pos = Integer.valueOf(txt_go_record.getText());

        try
        {            
            rs.absolute(pos); // spostamento assoluto

            txt_id.setText(rs.getString(1));
            txt_desc.setText(rs.getString(2));
            
            updateNavigatorView(); // navigatore

            lbl_tot_record.setText(rs.getRow() + " di " + nr_row);
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }
    }                                       

    private void radio_modifyActionPerformed(java.awt.event.ActionEvent evt)                                             
    {                                                 
        enableTableFields(true);

        // abilito/disabilito i pulsanti di conferma
        btn_modify.setEnabled(true);
        btn_delete.setEnabled(false);
        btn_insert.setEnabled(false);

        if (inInsertMode)
        {
            enableNavigators(true);
            updateRecordView();
            inInsertMode = false;
        }
    }                                            

    private void btn_modifyActionPerformed(java.awt.event.ActionEvent evt)                                           
    {                                               
        try
        {
            // impostazione modalità aggiornamento
            rs.updateString(1, txt_id.getText());
            rs.updateString(2, txt_desc.getText());
            
            rs.updateRow(); // modifica effettiva della riga
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }

        ta_result.setText("Modifica effettuata correttamente!!!");
    }                                          

    private void radio_insertActionPerformed(java.awt.event.ActionEvent evt)                                             
    {                                                 
        txt_id.setEnabled(false);
        txt_desc.setEnabled(true);

        txt_id.setText("");
        txt_desc.setText("");

        // abilito/disabilito i pulsanti di conferma
        btn_insert.setEnabled(true);
        btn_delete.setEnabled(false);
        btn_modify.setEnabled(false);

        inInsertMode = true;

        enableNavigators(false);
    }                                            

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt)                                           
    {                                               
        try
        {            
            rs.deleteRow(); // cancello la corrente riga
            updateRecordView();
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }

        ta_result.setText("Cancellazione effettuata correttamente!!!");
    }                                          

    private void btn_insertActionPerformed(java.awt.event.ActionEvent evt)                                           
    {                                               
        try
        {
            // impostazione modalità inserimento
            rs.moveToInsertRow();
            rs.updateString(2, txt_desc.getText());
            
            rs.insertRow(); // inserimento effettivo                      
            rs.moveToCurrentRow(); // cursore alla riga precedente a quella temporanea

            updateRecordView();
                
            enableNavigators(false);
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }

        ta_result.setText("Inserimento effettuato correttamente!!!");
    }                                          

    private void radio_deleteActionPerformed(java.awt.event.ActionEvent evt)                                             
    {                                                 
        // abilito/disabilito i pulsanti di conferma
        btn_delete.setEnabled(true);
        btn_modify.setEnabled(false);
        btn_insert.setEnabled(false);

        enableTableFields(false);

        if (inInsertMode)
        {
            enableNavigators(true);
            updateRecordView();
            inInsertMode = false;
        }
    }                                            

    private void loadFirstRecord()
    {
        enableNavigators(true);
        String query = "SELECT * FROM genere";      
        rs = DBHelper_REV_2.doQuery(query, true); // resultset full navigable
     
        try
        {
            // numero di righe
            nr_row = rs.last() ? rs.getRow() : 0;
            rs.beforeFirst();
            lbl_tot_record.setText("1 di " + nr_row);

            if (nr_row > 0)
            {                
                if (rs.next()) // primo record
                {
                    txt_id.setText(rs.getString(1));
                    txt_desc.setText(rs.getString(2));
                }
                
                updateNavigatorView(); // aggiorno vista navigatore
            }
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }            
    }

    private void updateRecordView()
    {
        try
        {
            txt_id.setText(rs.getString(1));
            txt_desc.setText(rs.getString(2));

            // aggiornamento viste
            updateNavigatorView();
            updateTotRecordView();
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }
    }

    private void updateNavigatorView()
    {
        try
        {
            if (rs.isFirst())
            {
                lbl_prev.setIcon(prev_dis_icon);
                lbl_first.setIcon(first_dis_icon);
            }
            else if (rs.isLast())
            {
                lbl_next.setIcon(next_dis_icon);
                lbl_last.setIcon(last_dis_icon);
            }
            else
            {
                lbl_prev.setIcon(prev_icon);
                lbl_first.setIcon(first_icon);
                lbl_next.setIcon(next_icon);
                lbl_last.setIcon(last_icon);
            }
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }
    }

    private void updateTotRecordView()
    {
        try
        {
            int cr = rs.getRow();
            nr_row = rs.last() ? rs.getRow() : 0;
            lbl_tot_record.setText(cr + " di " + nr_row);           
            rs.absolute(cr); // ripristina la riga corrente
        }
        catch (SQLException ex) { ta_result.setText(ex.getMessage()); }
    }

    private void enableTableFields(boolean e)
    {
        txt_id.setEnabled(e);
        txt_desc.setEnabled(e);
    }

    private void enableNavigators(boolean e)
    {
        lbl_first.setIcon(e ? first_icon : first_dis_icon);
        lbl_prev.setIcon(e ? prev_icon : prev_dis_icon);
        lbl_next.setIcon(e ? next_icon : next_dis_icon);
        lbl_last.setIcon(e ? last_icon : last_dis_icon);

        navigatorEnabled = e;

        txt_go_record.setEnabled(e);
    }

    private void loadIcons()
    {
        // icone
        first_icon = new ImageIcon(getClass().getResource("nav_first.png"));
        first_dis_icon = new ImageIcon(getClass().getResource("nav_first_dis.png"));
        last_icon = new ImageIcon(getClass().getResource("nav_last.png"));
        last_dis_icon = new ImageIcon(getClass().getResource("nav_last_dis.png"));
        next_icon = new ImageIcon(getClass().getResource("nav_next.png"));
        next_dis_icon = new ImageIcon(getClass().getResource("nav_next_dis.png"));
        prev_icon = new ImageIcon(getClass().getResource("nav_prev.png"));
        prev_dis_icon = new ImageIcon(getClass().getResource("nav_prev_dis.png"));
    }

    private void connectionToDatabase()
    {
        DBHelper_REV_2.dbtype = "MySQL";
        DBHelper_REV_2.output = ta_result;
        DBHelper_REV_2.loadDriver();
        DBHelper_REV_2.doConnection("localhost", "3306", "articoli", "java8", "java8");
    }

    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new UpdatableResultSetForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_insert;
    private javax.swing.JButton btn_modify;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_first;
    private javax.swing.JLabel lbl_last;
    private javax.swing.JLabel lbl_next;
    private javax.swing.JLabel lbl_prev;
    private javax.swing.JLabel lbl_tot_record;
    private javax.swing.JRadioButton radio_delete;
    private javax.swing.JRadioButton radio_insert;
    private javax.swing.JRadioButton radio_modify;
    private javax.swing.JTextArea ta_result;
    private javax.swing.JTextField txt_desc;
    private javax.swing.JTextField txt_go_record;
    private javax.swing.JTextField txt_id;
    // End of variables declaration                   
}
