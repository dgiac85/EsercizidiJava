...
import javax.sql.rowset.RowSetFactory;
import javax.sql.rowset.RowSetProvider;
import javax.sql.rowset.FilteredRowSet;
import javax.sql.rowset.Predicate;

try
{
	class MyFilter implements Predicate // predicato
	{
		// variabili per il confronto
		private String col_name;
		private int col_nr;
		private int low;
		private int high;

		public MyFilter(int low, int high, int col_nr, String col_name)
		{
			this.low = low;
			this.high = high;
			this.col_nr = col_nr;
			this.col_name = col_name;
		}

		public boolean evaluate(RowSet rs)
		{
			try
			{
				String value = rs.getString(col_name);
				return value != null
					&& (value.charAt(0) == 'L' || value.charAt(0) == 'l');
			}
			catch (SQLException ex) { return false; }
		}

		public boolean evaluate(Object value, int column) throws SQLException
		{
			return false;
		}

		public boolean evaluate(Object value, String columnName) throws SQLException
		{
			return false;
		}
	}
	
	RowSetFactory rf = RowSetProvider.newFactory(); // creazione del tipo FilteredRowSet
	FilteredRowSet frs = rf.createFilteredRowSet();
	// impostazione parametri di connessione
	frs.setUrl("jdbc:mysql://localhost/articoli");
	frs.setUsername("java8");
	frs.setPassword("java8");

	// query ed esecuzione
	frs.setCommand("SELECT * FROM genere");
	frs.execute();
	
	frs.setFilter(new MyFilter(-1, -1, -1, "descrizione")); // assegnamento di un filtro
	
	while (frs.next()) // mostra il risultato
	{
		String n = frs.getString("descrizione");
		System.out.println(n);
	}
}
catch (SQLException e) {}
